ser.vals = c("Not serious", "Somewhat serious", "Very serious")
time.vals = c("None", "One or two times", "Three or four times", "Five or more times")
coefs = c("private", "public", "Edyears", "Income", "Homeowner","Black", "Hispanic",
"West", "Midwest", "Northeast","urban", "urban.na")
dat$var_new = ordered(dat$Q1, levels=grade.vals)
#dat$var_na = rep(0,nrow(dat))
#dat[is.na(dat$var_new),]$var_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
wset = subset(wset, ((School==1 | School==2 | School==3)))
reg = svyolr(as.formula(paste("var_new ~ ", coef.form(coefs), sep="")), design=wset)
summary(reg)
coefs = c("private + public + Edyears + Income + Homeowner + Black + Hispanic +
West + Midwest + Northeast + urban + urban.na")
reg = svyolr(as.formula(paste("var_new ~ ", coefs, sep="")), design=wset)
summary(reg)
dat$var_new = ordered(dat$Q2P_1, levels=grade.vals)
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
wset = subset(wset, ((School==1 | School==2 | School==3)))
reg = svyolr(as.formula(paste("var_new ~ ", coefs, sep="")), design=wset)
dat$var_new
dat$var_new = ordered(dat$Q2P_1, levels=sat.vals)
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
wset = subset(wset, ((School==1 | School==2 | School==3)))
reg = svyolr(as.formula(paste("var_new ~ ", coefs, sep="")), design=wset)
summary(reg)
dat$var_new = ordered(dat$Q2P_1, levels=sat.vals)
dat$var_na = rep(0,nrow(dat))
dat[is.na(dat$var_new),]$var_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
wset = subset(wset, ((School==1 | School==2 | School==3)))
reg = svyolr(as.formula(paste("var_new ~ ", coefs, sep="")), design=wset)
summary(reg)
make.reg = function(var, outcat, dat, coefs){
dat$var = dat[,var]
dat$var_new = ordered(dat$var, levels=outcat)
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
wset = subset(wset, ((School==1 | School==2 | School==3)))
reg = svyolr(as.formula(paste("var_new ~ ", coefs, sep="")), design=wset)
return(reg)
}
make.reg("Q2P_1", sat.vals, dat, coefs)
summary(make.reg("Q2P_1", sat.vals, dat, coefs))
summary(make.reg("Q2P_1", sat.vals, dat, coefs))
summary(make.reg("Q2P_2", sat.vals, dat, coefs))
summary(make.reg("Q2P_3", sat.vals, dat, coefs))
summary(make.reg("Q2P_4", sat.vals, dat, coefs))
summary(make.reg("Q2P_5", sat.vals, dat, coefs))
summary(make.reg("Q2P_6", sat.vals, dat, coefs))
summary(make.reg("Q2P_7", sat.vals, dat, coefs))
summary(make.reg("Q2P_8", sat.vals, dat, coefs))
summary(make.reg("Q3P_1", ser.vals, dat, coefs))
summary(make.reg("Q3P_2", ser.vals, dat, coefs))
summary(make.reg("Q3P_3", ser.vals, dat, coefs))
summary(make.reg("Q3P_4", ser.vals, dat, coefs))
summary(make.reg("Q3P_5", ser.vals, dat, coefs))
summary(make.reg("Q3P_6", ser.vals, dat, coefs))
summary(make.reg("Q3P_7", ser.vals, dat, coefs))
summary(make.reg("Q4P_1", time.vals, dat, coefs))
summary(make.reg("Q4P_2", time.vals, dat, coefs))
summary(make.reg("Q4P_3", time.vals, dat, coefs))
summary(make.reg("Q4P_4", time.vals, dat, coefs))
summary(make.reg("Q4P_5", time.vals, dat, coefs))
summary(make.reg("Q4P_6", time.vals, dat, coefs))
summary(make.reg("Q4P_7", time.vals, dat, coefs))
summary(make.reg("Q2P_1", sat.vals, dat, coefs))
summary(make.reg("Q2P_2", sat.vals, dat, coefs))
summary(make.reg("Q3P_1", ser.vals, dat, coefs))
summary(make.reg("Q3P_2", ser.vals, dat, coefs))
make.reg = function(var, outcat, dat, coefs){
dat$var = dat[,var]
dat$var_new = ordered(dat$var, levels=outcat)
dat$var_na = rep(0,nrow(dat))
dat[is.na(dat$var_new),]$var_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
wset = subset(wset, ((School==1 | School==2 | School==3) & var_na!=1))
reg = svyolr(as.formula(paste("var_new ~ ", coefs, sep="")), design=wset)
return(reg)
}
summary(make.reg("Q3P_2", ser.vals, dat, coefs))
make.reg = function(var, outcat, dat, coefs){
dat$var = dat[,var]
dat$var_new = ordered(dat$var, levels=outcat)
#dat$var_na = rep(0,nrow(dat))
#dat[is.na(dat$var_new),]$var_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
wset = subset(wset, ((School==1 | School==2 | School==3) & var_na!=1))
reg = svyolr(as.formula(paste("var_new ~ ", coefs, sep="")), design=wset)
return(reg)
}
make.reg = function(var, outcat, dat, coefs){
dat$var = dat[,var]
dat$var_new = ordered(dat$var, levels=outcat)
#dat$var_na = rep(0,nrow(dat))
#dat[is.na(dat$var_new),]$var_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
wset = subset(wset, ((School==1 | School==2 | School==3)))
reg = svyolr(as.formula(paste("var_new ~ ", coefs, sep="")), design=wset)
return(reg)
}
summary(make.reg("Q3P_3", ser.vals, dat, coefs))
summary(make.reg("Q3P_2", ser.vals, dat, coefs))
summary(make.reg("Q4P_1", time.vals, dat, coefs))
library(foreign)
library(survey)
rm(list=ls())
root.add = "/Users/sambarrows/Dropbox/PEPG Surveys/"
dat = read.spss(paste(root.add,"PEPG 2016 Original Data/HarvardUniv_PEPG2016_Main_Client.sav", sep=""), to.data.frame=TRUE)
##################
##Preparing data##
##################
##Selecting groups
##################
##Reduced to parents
dat = dat[!is.na(dat$wt_parent),]
nrow(dat)
##Count obs for different groups
nrow(dat[which(dat$Q1P_B>0),])  ##charter
nrow(dat[which(dat$Q1P_C>0 & dat$Q1P_B<=0),])  ##private
nrow(dat[which(dat$Q1P_A>0 & dat$Q1P_B<=0 & dat$Q1P_C<=0),])  ##public
nrow(dat[which(dat$Q1P_A<=0 & dat$Q1P_B<=0 & dat$Q1P_C<=0),c("Q1P_A","Q1P_B","Q1P_C","Q1P_D")])
##Create variable to make it quicker (nb. numbers match frequency table, not those assigned in survey)
dat$School = rep(NA, nrow(dat))
dat[which(dat$Q1P_B>0),]$School = 1  ##charter
dat[which(dat$Q1P_C>0 & dat$Q1P_B<=0),]$School = 2 ##private
dat[which(dat$Q1P_A>0 & dat$Q1P_B<=0 & dat$Q1P_C<=0),]$School = 3 ##public
##Create dummy variables for school type
nrow(dat) - nrow(dat[which(dat$School==1 | dat$School==2 | dat$School==3),])
dat[-which(dat$School==1 | dat$School==2 | dat$School==3),c("Q1P_A","Q1P_B","Q1P_C","Q1P_D")]
dat$charter = rep(NA, nrow(dat))
dat$private = rep(NA, nrow(dat))
dat$public  = rep(NA, nrow(dat))
dat[which(dat$Q1P_B>0),]$charter = 1
dat[which(dat$Q1P_C>0 & dat$Q1P_B<=0),]$charter = 0
dat[which(dat$Q1P_A>0 & dat$Q1P_B<=0 & dat$Q1P_C<=0),]$charter = 0
dat[which(dat$Q1P_B>0),]$private = 0
dat[which(dat$Q1P_C>0 & dat$Q1P_B<=0),]$private = 1
dat[which(dat$Q1P_A>0 & dat$Q1P_B<=0 & dat$Q1P_C<=0),]$private = 0
dat[which(dat$Q1P_B>0),]$public= 0
dat[which(dat$Q1P_C>0 & dat$Q1P_B<=0),]$public = 0
dat[which(dat$Q1P_A>0 & dat$Q1P_B<=0 & dat$Q1P_C<=0),]$public = 1
##Outcome variables
###################
##Collapse Q2 responses into single variables
sat = c("Very dissatisfied","Dissatisfied","Neither satisfied nor dissatisfied","Satisfied","Very satisfied")
dat$Q2P_1 = rep(NA, nrow(dat))
dat[which(dat$Q2AP_1==sat[1]|dat$Q2AP_1==sat[2]|dat$Q2AP_1==sat[3]|dat$Q2AP_1==sat[4]|dat$Q2AP_1==sat[5]),]$Q2P_1 = as.character(dat[which(dat$Q2AP_1==sat[1]|dat$Q2AP_1==sat[2]|dat$Q2AP_1==sat[3]|dat$Q2AP_1==sat[4]|dat$Q2AP_1==sat[5]),]$Q2AP_1)
dat[which(dat$Q2BP_1==sat[1]|dat$Q2BP_1==sat[2]|dat$Q2BP_1==sat[3]|dat$Q2BP_1==sat[4]|dat$Q2BP_1==sat[5]),]$Q2P_1 = as.character(dat[which(dat$Q2BP_1==sat[1]|dat$Q2BP_1==sat[2]|dat$Q2BP_1==sat[3]|dat$Q2BP_1==sat[4]|dat$Q2BP_1==sat[5]),]$Q2BP_1)
dat[which(dat$Q2CP_1==sat[1]|dat$Q2CP_1==sat[2]|dat$Q2CP_1==sat[3]|dat$Q2CP_1==sat[4]|dat$Q2CP_1==sat[5]),]$Q2P_1 = as.character(dat[which(dat$Q2CP_1==sat[1]|dat$Q2CP_1==sat[2]|dat$Q2CP_1==sat[3]|dat$Q2CP_1==sat[4]|dat$Q2CP_1==sat[5]),]$Q2CP_1)
dat[which(dat$Q2DP_1==sat[1]|dat$Q2DP_1==sat[2]|dat$Q2DP_1==sat[3]|dat$Q2DP_1==sat[4]|dat$Q2DP_1==sat[5]),]$Q2P_1 = as.character(dat[which(dat$Q2DP_1==sat[1]|dat$Q2DP_1==sat[2]|dat$Q2DP_1==sat[3]|dat$Q2DP_1==sat[4]|dat$Q2DP_1==sat[5]),]$Q2DP_1)
dat[which(dat$Q2EP_1==sat[1]|dat$Q2EP_1==sat[2]|dat$Q2EP_1==sat[3]|dat$Q2EP_1==sat[4]|dat$Q2EP_1==sat[5]),]$Q2P_1 = as.character(dat[which(dat$Q2EP_1==sat[1]|dat$Q2EP_1==sat[2]|dat$Q2EP_1==sat[3]|dat$Q2EP_1==sat[4]|dat$Q2EP_1==sat[5]),]$Q2EP_1)
dat[which(dat$Q2FP_1==sat[1]|dat$Q2FP_1==sat[2]|dat$Q2FP_1==sat[3]|dat$Q2FP_1==sat[4]|dat$Q2FP_1==sat[5]),]$Q2P_1 = as.character(dat[which(dat$Q2FP_1==sat[1]|dat$Q2FP_1==sat[2]|dat$Q2FP_1==sat[3]|dat$Q2FP_1==sat[4]|dat$Q2FP_1==sat[5]),]$Q2FP_1)
dat[which(dat$Q2GP_1==sat[1]|dat$Q2GP_1==sat[2]|dat$Q2GP_1==sat[3]|dat$Q2GP_1==sat[4]|dat$Q2GP_1==sat[5]),]$Q2P_1 = as.character(dat[which(dat$Q2GP_1==sat[1]|dat$Q2GP_1==sat[2]|dat$Q2GP_1==sat[3]|dat$Q2GP_1==sat[4]|dat$Q2GP_1==sat[5]),]$Q2GP_1)
dat[which(dat$Q2HP_1==sat[1]|dat$Q2HP_1==sat[2]|dat$Q2HP_1==sat[3]|dat$Q2HP_1==sat[4]|dat$Q2HP_1==sat[5]),]$Q2P_1 = as.character(dat[which(dat$Q2HP_1==sat[1]|dat$Q2HP_1==sat[2]|dat$Q2HP_1==sat[3]|dat$Q2HP_1==sat[4]|dat$Q2HP_1==sat[5]),]$Q2HP_1)
dat[which(dat$Q2IP_1==sat[1]|dat$Q2IP_1==sat[2]|dat$Q2IP_1==sat[3]|dat$Q2IP_1==sat[4]|dat$Q2IP_1==sat[5]),]$Q2P_1 = as.character(dat[which(dat$Q2IP_1==sat[1]|dat$Q2IP_1==sat[2]|dat$Q2IP_1==sat[3]|dat$Q2IP_1==sat[4]|dat$Q2IP_1==sat[5]),]$Q2IP_1)
dat$Q2P_1 = ordered(dat$Q2P_1, levels = sat)
dat$Q2P_1_na = rep(0, nrow(dat))
dat[is.na(dat$Q2P_1),]$Q2P_1_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
svymean(~Q2P_1, subset(wset, School==1 & Q2P_1_na!=1))  ##charter
svymean(~Q2P_1, subset(wset, School==2 & Q2P_1_na!=1))  ##private
svymean(~Q2P_1, subset(wset, School==3 & Q2P_1_na!=1))  ##public
dat$Q2P_2 = rep(NA, nrow(dat))
dat[which(dat$Q2AP_2==sat[1]|dat$Q2AP_2==sat[2]|dat$Q2AP_2==sat[3]|dat$Q2AP_2==sat[4]|dat$Q2AP_2==sat[5]),]$Q2P_2 = as.character(dat[which(dat$Q2AP_2==sat[1]|dat$Q2AP_2==sat[2]|dat$Q2AP_2==sat[3]|dat$Q2AP_2==sat[4]|dat$Q2AP_2==sat[5]),]$Q2AP_2)
dat[which(dat$Q2BP_2==sat[1]|dat$Q2BP_2==sat[2]|dat$Q2BP_2==sat[3]|dat$Q2BP_2==sat[4]|dat$Q2BP_2==sat[5]),]$Q2P_2 = as.character(dat[which(dat$Q2BP_2==sat[1]|dat$Q2BP_2==sat[2]|dat$Q2BP_2==sat[3]|dat$Q2BP_2==sat[4]|dat$Q2BP_2==sat[5]),]$Q2BP_2)
dat[which(dat$Q2CP_2==sat[1]|dat$Q2CP_2==sat[2]|dat$Q2CP_2==sat[3]|dat$Q2CP_2==sat[4]|dat$Q2CP_2==sat[5]),]$Q2P_2 = as.character(dat[which(dat$Q2CP_2==sat[1]|dat$Q2CP_2==sat[2]|dat$Q2CP_2==sat[3]|dat$Q2CP_2==sat[4]|dat$Q2CP_2==sat[5]),]$Q2CP_2)
dat[which(dat$Q2DP_2==sat[1]|dat$Q2DP_2==sat[2]|dat$Q2DP_2==sat[3]|dat$Q2DP_2==sat[4]|dat$Q2DP_2==sat[5]),]$Q2P_2 = as.character(dat[which(dat$Q2DP_2==sat[1]|dat$Q2DP_2==sat[2]|dat$Q2DP_2==sat[3]|dat$Q2DP_2==sat[4]|dat$Q2DP_2==sat[5]),]$Q2DP_2)
dat[which(dat$Q2EP_2==sat[1]|dat$Q2EP_2==sat[2]|dat$Q2EP_2==sat[3]|dat$Q2EP_2==sat[4]|dat$Q2EP_2==sat[5]),]$Q2P_2 = as.character(dat[which(dat$Q2EP_2==sat[1]|dat$Q2EP_2==sat[2]|dat$Q2EP_2==sat[3]|dat$Q2EP_2==sat[4]|dat$Q2EP_2==sat[5]),]$Q2EP_2)
dat[which(dat$Q2FP_2==sat[1]|dat$Q2FP_2==sat[2]|dat$Q2FP_2==sat[3]|dat$Q2FP_2==sat[4]|dat$Q2FP_2==sat[5]),]$Q2P_2 = as.character(dat[which(dat$Q2FP_2==sat[1]|dat$Q2FP_2==sat[2]|dat$Q2FP_2==sat[3]|dat$Q2FP_2==sat[4]|dat$Q2FP_2==sat[5]),]$Q2FP_2)
dat[which(dat$Q2GP_2==sat[1]|dat$Q2GP_2==sat[2]|dat$Q2GP_2==sat[3]|dat$Q2GP_2==sat[4]|dat$Q2GP_2==sat[5]),]$Q2P_2 = as.character(dat[which(dat$Q2GP_2==sat[1]|dat$Q2GP_2==sat[2]|dat$Q2GP_2==sat[3]|dat$Q2GP_2==sat[4]|dat$Q2GP_2==sat[5]),]$Q2GP_2)
dat[which(dat$Q2HP_2==sat[1]|dat$Q2HP_2==sat[2]|dat$Q2HP_2==sat[3]|dat$Q2HP_2==sat[4]|dat$Q2HP_2==sat[5]),]$Q2P_2 = as.character(dat[which(dat$Q2HP_2==sat[1]|dat$Q2HP_2==sat[2]|dat$Q2HP_2==sat[3]|dat$Q2HP_2==sat[4]|dat$Q2HP_2==sat[5]),]$Q2HP_2)
dat[which(dat$Q2IP_2==sat[1]|dat$Q2IP_2==sat[2]|dat$Q2IP_2==sat[3]|dat$Q2IP_2==sat[4]|dat$Q2IP_2==sat[5]),]$Q2P_2 = as.character(dat[which(dat$Q2IP_2==sat[1]|dat$Q2IP_2==sat[2]|dat$Q2IP_2==sat[3]|dat$Q2IP_2==sat[4]|dat$Q2IP_2==sat[5]),]$Q2IP_2)
dat$Q2P_2 = ordered(dat$Q2P_2, levels = sat)
dat$Q2P_2_na = rep(0, nrow(dat))
dat[is.na(dat$Q2P_2),]$Q2P_2_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
svymean(~Q2P_2, subset(wset, School==1 & Q2P_2_na!=1))  ##charter
svymean(~Q2P_2, subset(wset, School==2 & Q2P_2_na!=1))  ##private
svymean(~Q2P_2, subset(wset, School==3 & Q2P_2_na!=1))  ##public
dat$Q2P_3 = rep(NA, nrow(dat))
dat[which(dat$Q2AP_3==sat[1]|dat$Q2AP_3==sat[2]|dat$Q2AP_3==sat[3]|dat$Q2AP_3==sat[4]|dat$Q2AP_3==sat[5]),]$Q2P_3 = as.character(dat[which(dat$Q2AP_3==sat[1]|dat$Q2AP_3==sat[2]|dat$Q2AP_3==sat[3]|dat$Q2AP_3==sat[4]|dat$Q2AP_3==sat[5]),]$Q2AP_3)
dat[which(dat$Q2BP_3==sat[1]|dat$Q2BP_3==sat[2]|dat$Q2BP_3==sat[3]|dat$Q2BP_3==sat[4]|dat$Q2BP_3==sat[5]),]$Q2P_3 = as.character(dat[which(dat$Q2BP_3==sat[1]|dat$Q2BP_3==sat[2]|dat$Q2BP_3==sat[3]|dat$Q2BP_3==sat[4]|dat$Q2BP_3==sat[5]),]$Q2BP_3)
dat[which(dat$Q2CP_3==sat[1]|dat$Q2CP_3==sat[2]|dat$Q2CP_3==sat[3]|dat$Q2CP_3==sat[4]|dat$Q2CP_3==sat[5]),]$Q2P_3 = as.character(dat[which(dat$Q2CP_3==sat[1]|dat$Q2CP_3==sat[2]|dat$Q2CP_3==sat[3]|dat$Q2CP_3==sat[4]|dat$Q2CP_3==sat[5]),]$Q2CP_3)
dat[which(dat$Q2DP_3==sat[1]|dat$Q2DP_3==sat[2]|dat$Q2DP_3==sat[3]|dat$Q2DP_3==sat[4]|dat$Q2DP_3==sat[5]),]$Q2P_3 = as.character(dat[which(dat$Q2DP_3==sat[1]|dat$Q2DP_3==sat[2]|dat$Q2DP_3==sat[3]|dat$Q2DP_3==sat[4]|dat$Q2DP_3==sat[5]),]$Q2DP_3)
dat[which(dat$Q2EP_3==sat[1]|dat$Q2EP_3==sat[2]|dat$Q2EP_3==sat[3]|dat$Q2EP_3==sat[4]|dat$Q2EP_3==sat[5]),]$Q2P_3 = as.character(dat[which(dat$Q2EP_3==sat[1]|dat$Q2EP_3==sat[2]|dat$Q2EP_3==sat[3]|dat$Q2EP_3==sat[4]|dat$Q2EP_3==sat[5]),]$Q2EP_3)
dat[which(dat$Q2FP_3==sat[1]|dat$Q2FP_3==sat[2]|dat$Q2FP_3==sat[3]|dat$Q2FP_3==sat[4]|dat$Q2FP_3==sat[5]),]$Q2P_3 = as.character(dat[which(dat$Q2FP_3==sat[1]|dat$Q2FP_3==sat[2]|dat$Q2FP_3==sat[3]|dat$Q2FP_3==sat[4]|dat$Q2FP_3==sat[5]),]$Q2FP_3)
dat[which(dat$Q2GP_3==sat[1]|dat$Q2GP_3==sat[2]|dat$Q2GP_3==sat[3]|dat$Q2GP_3==sat[4]|dat$Q2GP_3==sat[5]),]$Q2P_3 = as.character(dat[which(dat$Q2GP_3==sat[1]|dat$Q2GP_3==sat[2]|dat$Q2GP_3==sat[3]|dat$Q2GP_3==sat[4]|dat$Q2GP_3==sat[5]),]$Q2GP_3)
dat[which(dat$Q2HP_3==sat[1]|dat$Q2HP_3==sat[2]|dat$Q2HP_3==sat[3]|dat$Q2HP_3==sat[4]|dat$Q2HP_3==sat[5]),]$Q2P_3 = as.character(dat[which(dat$Q2HP_3==sat[1]|dat$Q2HP_3==sat[2]|dat$Q2HP_3==sat[3]|dat$Q2HP_3==sat[4]|dat$Q2HP_3==sat[5]),]$Q2HP_3)
dat[which(dat$Q2IP_3==sat[1]|dat$Q2IP_3==sat[2]|dat$Q2IP_3==sat[3]|dat$Q2IP_3==sat[4]|dat$Q2IP_3==sat[5]),]$Q2P_3 = as.character(dat[which(dat$Q2IP_3==sat[1]|dat$Q2IP_3==sat[2]|dat$Q2IP_3==sat[3]|dat$Q2IP_3==sat[4]|dat$Q2IP_3==sat[5]),]$Q2IP_3)
dat$Q2P_3 = ordered(dat$Q2P_3, levels = sat)
dat$Q2P_3_na = rep(0, nrow(dat))
dat[is.na(dat$Q2P_3),]$Q2P_3_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
svymean(~Q2P_3, subset(wset, School==1 & Q2P_3_na!=1))  ##charter
svymean(~Q2P_3, subset(wset, School==2 & Q2P_3_na!=1))  ##private
svymean(~Q2P_3, subset(wset, School==3 & Q2P_3_na!=1))  ##public
dat$Q2P_4 = rep(NA, nrow(dat))
dat[which(dat$Q2AP_4==sat[1]|dat$Q2AP_4==sat[2]|dat$Q2AP_4==sat[3]|dat$Q2AP_4==sat[4]|dat$Q2AP_4==sat[5]),]$Q2P_4 = as.character(dat[which(dat$Q2AP_4==sat[1]|dat$Q2AP_4==sat[2]|dat$Q2AP_4==sat[3]|dat$Q2AP_4==sat[4]|dat$Q2AP_4==sat[5]),]$Q2AP_4)
dat[which(dat$Q2BP_4==sat[1]|dat$Q2BP_4==sat[2]|dat$Q2BP_4==sat[3]|dat$Q2BP_4==sat[4]|dat$Q2BP_4==sat[5]),]$Q2P_4 = as.character(dat[which(dat$Q2BP_4==sat[1]|dat$Q2BP_4==sat[2]|dat$Q2BP_4==sat[3]|dat$Q2BP_4==sat[4]|dat$Q2BP_4==sat[5]),]$Q2BP_4)
dat[which(dat$Q2CP_4==sat[1]|dat$Q2CP_4==sat[2]|dat$Q2CP_4==sat[3]|dat$Q2CP_4==sat[4]|dat$Q2CP_4==sat[5]),]$Q2P_4 = as.character(dat[which(dat$Q2CP_4==sat[1]|dat$Q2CP_4==sat[2]|dat$Q2CP_4==sat[3]|dat$Q2CP_4==sat[4]|dat$Q2CP_4==sat[5]),]$Q2CP_4)
dat[which(dat$Q2DP_4==sat[1]|dat$Q2DP_4==sat[2]|dat$Q2DP_4==sat[3]|dat$Q2DP_4==sat[4]|dat$Q2DP_4==sat[5]),]$Q2P_4 = as.character(dat[which(dat$Q2DP_4==sat[1]|dat$Q2DP_4==sat[2]|dat$Q2DP_4==sat[3]|dat$Q2DP_4==sat[4]|dat$Q2DP_4==sat[5]),]$Q2DP_4)
dat[which(dat$Q2EP_4==sat[1]|dat$Q2EP_4==sat[2]|dat$Q2EP_4==sat[3]|dat$Q2EP_4==sat[4]|dat$Q2EP_4==sat[5]),]$Q2P_4 = as.character(dat[which(dat$Q2EP_4==sat[1]|dat$Q2EP_4==sat[2]|dat$Q2EP_4==sat[3]|dat$Q2EP_4==sat[4]|dat$Q2EP_4==sat[5]),]$Q2EP_4)
dat[which(dat$Q2FP_4==sat[1]|dat$Q2FP_4==sat[2]|dat$Q2FP_4==sat[3]|dat$Q2FP_4==sat[4]|dat$Q2FP_4==sat[5]),]$Q2P_4 = as.character(dat[which(dat$Q2FP_4==sat[1]|dat$Q2FP_4==sat[2]|dat$Q2FP_4==sat[3]|dat$Q2FP_4==sat[4]|dat$Q2FP_4==sat[5]),]$Q2FP_4)
dat[which(dat$Q2GP_4==sat[1]|dat$Q2GP_4==sat[2]|dat$Q2GP_4==sat[3]|dat$Q2GP_4==sat[4]|dat$Q2GP_4==sat[5]),]$Q2P_4 = as.character(dat[which(dat$Q2GP_4==sat[1]|dat$Q2GP_4==sat[2]|dat$Q2GP_4==sat[3]|dat$Q2GP_4==sat[4]|dat$Q2GP_4==sat[5]),]$Q2GP_4)
dat[which(dat$Q2HP_4==sat[1]|dat$Q2HP_4==sat[2]|dat$Q2HP_4==sat[3]|dat$Q2HP_4==sat[4]|dat$Q2HP_4==sat[5]),]$Q2P_4 = as.character(dat[which(dat$Q2HP_4==sat[1]|dat$Q2HP_4==sat[2]|dat$Q2HP_4==sat[3]|dat$Q2HP_4==sat[4]|dat$Q2HP_4==sat[5]),]$Q2HP_4)
dat[which(dat$Q2IP_4==sat[1]|dat$Q2IP_4==sat[2]|dat$Q2IP_4==sat[3]|dat$Q2IP_4==sat[4]|dat$Q2IP_4==sat[5]),]$Q2P_4 = as.character(dat[which(dat$Q2IP_4==sat[1]|dat$Q2IP_4==sat[2]|dat$Q2IP_4==sat[3]|dat$Q2IP_4==sat[4]|dat$Q2IP_4==sat[5]),]$Q2IP_4)
dat$Q2P_4 = ordered(dat$Q2P_4, levels = sat)
dat$Q2P_4_na = rep(0, nrow(dat))
dat[is.na(dat$Q2P_4),]$Q2P_4_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
svymean(~Q2P_4, subset(wset, School==1 & Q2P_4_na!=1))  ##charter
svymean(~Q2P_4, subset(wset, School==2 & Q2P_4_na!=1))  ##private
svymean(~Q2P_4, subset(wset, School==3 & Q2P_4_na!=1))  ##public
dat$Q2P_5 = rep(NA, nrow(dat))
dat[which(dat$Q2AP_5==sat[1]|dat$Q2AP_5==sat[2]|dat$Q2AP_5==sat[3]|dat$Q2AP_5==sat[4]|dat$Q2AP_5==sat[5]),]$Q2P_5 = as.character(dat[which(dat$Q2AP_5==sat[1]|dat$Q2AP_5==sat[2]|dat$Q2AP_5==sat[3]|dat$Q2AP_5==sat[4]|dat$Q2AP_5==sat[5]),]$Q2AP_5)
dat[which(dat$Q2BP_5==sat[1]|dat$Q2BP_5==sat[2]|dat$Q2BP_5==sat[3]|dat$Q2BP_5==sat[4]|dat$Q2BP_5==sat[5]),]$Q2P_5 = as.character(dat[which(dat$Q2BP_5==sat[1]|dat$Q2BP_5==sat[2]|dat$Q2BP_5==sat[3]|dat$Q2BP_5==sat[4]|dat$Q2BP_5==sat[5]),]$Q2BP_5)
dat[which(dat$Q2CP_5==sat[1]|dat$Q2CP_5==sat[2]|dat$Q2CP_5==sat[3]|dat$Q2CP_5==sat[4]|dat$Q2CP_5==sat[5]),]$Q2P_5 = as.character(dat[which(dat$Q2CP_5==sat[1]|dat$Q2CP_5==sat[2]|dat$Q2CP_5==sat[3]|dat$Q2CP_5==sat[4]|dat$Q2CP_5==sat[5]),]$Q2CP_5)
dat[which(dat$Q2DP_5==sat[1]|dat$Q2DP_5==sat[2]|dat$Q2DP_5==sat[3]|dat$Q2DP_5==sat[4]|dat$Q2DP_5==sat[5]),]$Q2P_5 = as.character(dat[which(dat$Q2DP_5==sat[1]|dat$Q2DP_5==sat[2]|dat$Q2DP_5==sat[3]|dat$Q2DP_5==sat[4]|dat$Q2DP_5==sat[5]),]$Q2DP_5)
dat[which(dat$Q2EP_5==sat[1]|dat$Q2EP_5==sat[2]|dat$Q2EP_5==sat[3]|dat$Q2EP_5==sat[4]|dat$Q2EP_5==sat[5]),]$Q2P_5 = as.character(dat[which(dat$Q2EP_5==sat[1]|dat$Q2EP_5==sat[2]|dat$Q2EP_5==sat[3]|dat$Q2EP_5==sat[4]|dat$Q2EP_5==sat[5]),]$Q2EP_5)
dat[which(dat$Q2FP_5==sat[1]|dat$Q2FP_5==sat[2]|dat$Q2FP_5==sat[3]|dat$Q2FP_5==sat[4]|dat$Q2FP_5==sat[5]),]$Q2P_5 = as.character(dat[which(dat$Q2FP_5==sat[1]|dat$Q2FP_5==sat[2]|dat$Q2FP_5==sat[3]|dat$Q2FP_5==sat[4]|dat$Q2FP_5==sat[5]),]$Q2FP_5)
dat[which(dat$Q2GP_5==sat[1]|dat$Q2GP_5==sat[2]|dat$Q2GP_5==sat[3]|dat$Q2GP_5==sat[4]|dat$Q2GP_5==sat[5]),]$Q2P_5 = as.character(dat[which(dat$Q2GP_5==sat[1]|dat$Q2GP_5==sat[2]|dat$Q2GP_5==sat[3]|dat$Q2GP_5==sat[4]|dat$Q2GP_5==sat[5]),]$Q2GP_5)
dat[which(dat$Q2HP_5==sat[1]|dat$Q2HP_5==sat[2]|dat$Q2HP_5==sat[3]|dat$Q2HP_5==sat[4]|dat$Q2HP_5==sat[5]),]$Q2P_5 = as.character(dat[which(dat$Q2HP_5==sat[1]|dat$Q2HP_5==sat[2]|dat$Q2HP_5==sat[3]|dat$Q2HP_5==sat[4]|dat$Q2HP_5==sat[5]),]$Q2HP_5)
dat[which(dat$Q2IP_5==sat[1]|dat$Q2IP_5==sat[2]|dat$Q2IP_5==sat[3]|dat$Q2IP_5==sat[4]|dat$Q2IP_5==sat[5]),]$Q2P_5 = as.character(dat[which(dat$Q2IP_5==sat[1]|dat$Q2IP_5==sat[2]|dat$Q2IP_5==sat[3]|dat$Q2IP_5==sat[4]|dat$Q2IP_5==sat[5]),]$Q2IP_5)
dat$Q2P_5 = ordered(dat$Q2P_5, levels = sat)
dat$Q2P_5_na = rep(0, nrow(dat))
dat[is.na(dat$Q2P_5),]$Q2P_5_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
svymean(~Q2P_5, subset(wset, School==1 & Q2P_5_na!=1))  ##charter
svymean(~Q2P_5, subset(wset, School==2 & Q2P_5_na!=1))  ##private
svymean(~Q2P_5, subset(wset, School==3 & Q2P_5_na!=1))  ##public
dat$Q2P_6 = rep(NA, nrow(dat))
dat[which(dat$Q2AP_6==sat[1]|dat$Q2AP_6==sat[2]|dat$Q2AP_6==sat[3]|dat$Q2AP_6==sat[4]|dat$Q2AP_6==sat[5]),]$Q2P_6 = as.character(dat[which(dat$Q2AP_6==sat[1]|dat$Q2AP_6==sat[2]|dat$Q2AP_6==sat[3]|dat$Q2AP_6==sat[4]|dat$Q2AP_6==sat[5]),]$Q2AP_6)
dat[which(dat$Q2BP_6==sat[1]|dat$Q2BP_6==sat[2]|dat$Q2BP_6==sat[3]|dat$Q2BP_6==sat[4]|dat$Q2BP_6==sat[5]),]$Q2P_6 = as.character(dat[which(dat$Q2BP_6==sat[1]|dat$Q2BP_6==sat[2]|dat$Q2BP_6==sat[3]|dat$Q2BP_6==sat[4]|dat$Q2BP_6==sat[5]),]$Q2BP_6)
dat[which(dat$Q2CP_6==sat[1]|dat$Q2CP_6==sat[2]|dat$Q2CP_6==sat[3]|dat$Q2CP_6==sat[4]|dat$Q2CP_6==sat[5]),]$Q2P_6 = as.character(dat[which(dat$Q2CP_6==sat[1]|dat$Q2CP_6==sat[2]|dat$Q2CP_6==sat[3]|dat$Q2CP_6==sat[4]|dat$Q2CP_6==sat[5]),]$Q2CP_6)
dat[which(dat$Q2DP_6==sat[1]|dat$Q2DP_6==sat[2]|dat$Q2DP_6==sat[3]|dat$Q2DP_6==sat[4]|dat$Q2DP_6==sat[5]),]$Q2P_6 = as.character(dat[which(dat$Q2DP_6==sat[1]|dat$Q2DP_6==sat[2]|dat$Q2DP_6==sat[3]|dat$Q2DP_6==sat[4]|dat$Q2DP_6==sat[5]),]$Q2DP_6)
dat[which(dat$Q2EP_6==sat[1]|dat$Q2EP_6==sat[2]|dat$Q2EP_6==sat[3]|dat$Q2EP_6==sat[4]|dat$Q2EP_6==sat[5]),]$Q2P_6 = as.character(dat[which(dat$Q2EP_6==sat[1]|dat$Q2EP_6==sat[2]|dat$Q2EP_6==sat[3]|dat$Q2EP_6==sat[4]|dat$Q2EP_6==sat[5]),]$Q2EP_6)
dat[which(dat$Q2FP_6==sat[1]|dat$Q2FP_6==sat[2]|dat$Q2FP_6==sat[3]|dat$Q2FP_6==sat[4]|dat$Q2FP_6==sat[5]),]$Q2P_6 = as.character(dat[which(dat$Q2FP_6==sat[1]|dat$Q2FP_6==sat[2]|dat$Q2FP_6==sat[3]|dat$Q2FP_6==sat[4]|dat$Q2FP_6==sat[5]),]$Q2FP_6)
dat[which(dat$Q2GP_6==sat[1]|dat$Q2GP_6==sat[2]|dat$Q2GP_6==sat[3]|dat$Q2GP_6==sat[4]|dat$Q2GP_6==sat[5]),]$Q2P_6 = as.character(dat[which(dat$Q2GP_6==sat[1]|dat$Q2GP_6==sat[2]|dat$Q2GP_6==sat[3]|dat$Q2GP_6==sat[4]|dat$Q2GP_6==sat[5]),]$Q2GP_6)
dat[which(dat$Q2HP_6==sat[1]|dat$Q2HP_6==sat[2]|dat$Q2HP_6==sat[3]|dat$Q2HP_6==sat[4]|dat$Q2HP_6==sat[5]),]$Q2P_6 = as.character(dat[which(dat$Q2HP_6==sat[1]|dat$Q2HP_6==sat[2]|dat$Q2HP_6==sat[3]|dat$Q2HP_6==sat[4]|dat$Q2HP_6==sat[5]),]$Q2HP_6)
dat[which(dat$Q2IP_6==sat[1]|dat$Q2IP_6==sat[2]|dat$Q2IP_6==sat[3]|dat$Q2IP_6==sat[4]|dat$Q2IP_6==sat[5]),]$Q2P_6 = as.character(dat[which(dat$Q2IP_6==sat[1]|dat$Q2IP_6==sat[2]|dat$Q2IP_6==sat[3]|dat$Q2IP_6==sat[4]|dat$Q2IP_6==sat[5]),]$Q2IP_6)
dat$Q2P_6 = ordered(dat$Q2P_6, levels = sat)
dat$Q2P_6_na = rep(0, nrow(dat))
dat[is.na(dat$Q2P_6),]$Q2P_6_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
svymean(~Q2P_6, subset(wset, School==1 & Q2P_6_na!=1))  ##charter
svymean(~Q2P_6, subset(wset, School==2 & Q2P_6_na!=1))  ##private
svymean(~Q2P_6, subset(wset, School==3 & Q2P_6_na!=1))  ##public
dat$Q2P_7 = rep(NA, nrow(dat))
dat[which(dat$Q2AP_7==sat[1]|dat$Q2AP_7==sat[2]|dat$Q2AP_7==sat[3]|dat$Q2AP_7==sat[4]|dat$Q2AP_7==sat[5]),]$Q2P_7 = as.character(dat[which(dat$Q2AP_7==sat[1]|dat$Q2AP_7==sat[2]|dat$Q2AP_7==sat[3]|dat$Q2AP_7==sat[4]|dat$Q2AP_7==sat[5]),]$Q2AP_7)
dat[which(dat$Q2BP_7==sat[1]|dat$Q2BP_7==sat[2]|dat$Q2BP_7==sat[3]|dat$Q2BP_7==sat[4]|dat$Q2BP_7==sat[5]),]$Q2P_7 = as.character(dat[which(dat$Q2BP_7==sat[1]|dat$Q2BP_7==sat[2]|dat$Q2BP_7==sat[3]|dat$Q2BP_7==sat[4]|dat$Q2BP_7==sat[5]),]$Q2BP_7)
dat[which(dat$Q2CP_7==sat[1]|dat$Q2CP_7==sat[2]|dat$Q2CP_7==sat[3]|dat$Q2CP_7==sat[4]|dat$Q2CP_7==sat[5]),]$Q2P_7 = as.character(dat[which(dat$Q2CP_7==sat[1]|dat$Q2CP_7==sat[2]|dat$Q2CP_7==sat[3]|dat$Q2CP_7==sat[4]|dat$Q2CP_7==sat[5]),]$Q2CP_7)
dat[which(dat$Q2DP_7==sat[1]|dat$Q2DP_7==sat[2]|dat$Q2DP_7==sat[3]|dat$Q2DP_7==sat[4]|dat$Q2DP_7==sat[5]),]$Q2P_7 = as.character(dat[which(dat$Q2DP_7==sat[1]|dat$Q2DP_7==sat[2]|dat$Q2DP_7==sat[3]|dat$Q2DP_7==sat[4]|dat$Q2DP_7==sat[5]),]$Q2DP_7)
dat[which(dat$Q2EP_7==sat[1]|dat$Q2EP_7==sat[2]|dat$Q2EP_7==sat[3]|dat$Q2EP_7==sat[4]|dat$Q2EP_7==sat[5]),]$Q2P_7 = as.character(dat[which(dat$Q2EP_7==sat[1]|dat$Q2EP_7==sat[2]|dat$Q2EP_7==sat[3]|dat$Q2EP_7==sat[4]|dat$Q2EP_7==sat[5]),]$Q2EP_7)
dat[which(dat$Q2FP_7==sat[1]|dat$Q2FP_7==sat[2]|dat$Q2FP_7==sat[3]|dat$Q2FP_7==sat[4]|dat$Q2FP_7==sat[5]),]$Q2P_7 = as.character(dat[which(dat$Q2FP_7==sat[1]|dat$Q2FP_7==sat[2]|dat$Q2FP_7==sat[3]|dat$Q2FP_7==sat[4]|dat$Q2FP_7==sat[5]),]$Q2FP_7)
dat[which(dat$Q2GP_7==sat[1]|dat$Q2GP_7==sat[2]|dat$Q2GP_7==sat[3]|dat$Q2GP_7==sat[4]|dat$Q2GP_7==sat[5]),]$Q2P_7 = as.character(dat[which(dat$Q2GP_7==sat[1]|dat$Q2GP_7==sat[2]|dat$Q2GP_7==sat[3]|dat$Q2GP_7==sat[4]|dat$Q2GP_7==sat[5]),]$Q2GP_7)
dat[which(dat$Q2HP_7==sat[1]|dat$Q2HP_7==sat[2]|dat$Q2HP_7==sat[3]|dat$Q2HP_7==sat[4]|dat$Q2HP_7==sat[5]),]$Q2P_7 = as.character(dat[which(dat$Q2HP_7==sat[1]|dat$Q2HP_7==sat[2]|dat$Q2HP_7==sat[3]|dat$Q2HP_7==sat[4]|dat$Q2HP_7==sat[5]),]$Q2HP_7)
dat[which(dat$Q2IP_7==sat[1]|dat$Q2IP_7==sat[2]|dat$Q2IP_7==sat[3]|dat$Q2IP_7==sat[4]|dat$Q2IP_7==sat[5]),]$Q2P_7 = as.character(dat[which(dat$Q2IP_7==sat[1]|dat$Q2IP_7==sat[2]|dat$Q2IP_7==sat[3]|dat$Q2IP_7==sat[4]|dat$Q2IP_7==sat[5]),]$Q2IP_7)
dat$Q2P_7 = ordered(dat$Q2P_7, levels = sat)
dat$Q2P_7_na = rep(0, nrow(dat))
dat[is.na(dat$Q2P_7),]$Q2P_7_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
svymean(~Q2P_7, subset(wset, School==1 & Q2P_7_na!=1))  ##charter
svymean(~Q2P_7, subset(wset, School==2 & Q2P_7_na!=1))  ##private
svymean(~Q2P_7, subset(wset, School==3 & Q2P_7_na!=1))  ##public
dat$Q2P_8 = rep(NA, nrow(dat))
dat[which(dat$Q2AP_8==sat[1]|dat$Q2AP_8==sat[2]|dat$Q2AP_8==sat[3]|dat$Q2AP_8==sat[4]|dat$Q2AP_8==sat[5]),]$Q2P_8 = as.character(dat[which(dat$Q2AP_8==sat[1]|dat$Q2AP_8==sat[2]|dat$Q2AP_8==sat[3]|dat$Q2AP_8==sat[4]|dat$Q2AP_8==sat[5]),]$Q2AP_8)
dat[which(dat$Q2BP_8==sat[1]|dat$Q2BP_8==sat[2]|dat$Q2BP_8==sat[3]|dat$Q2BP_8==sat[4]|dat$Q2BP_8==sat[5]),]$Q2P_8 = as.character(dat[which(dat$Q2BP_8==sat[1]|dat$Q2BP_8==sat[2]|dat$Q2BP_8==sat[3]|dat$Q2BP_8==sat[4]|dat$Q2BP_8==sat[5]),]$Q2BP_8)
dat[which(dat$Q2CP_8==sat[1]|dat$Q2CP_8==sat[2]|dat$Q2CP_8==sat[3]|dat$Q2CP_8==sat[4]|dat$Q2CP_8==sat[5]),]$Q2P_8 = as.character(dat[which(dat$Q2CP_8==sat[1]|dat$Q2CP_8==sat[2]|dat$Q2CP_8==sat[3]|dat$Q2CP_8==sat[4]|dat$Q2CP_8==sat[5]),]$Q2CP_8)
dat[which(dat$Q2DP_8==sat[1]|dat$Q2DP_8==sat[2]|dat$Q2DP_8==sat[3]|dat$Q2DP_8==sat[4]|dat$Q2DP_8==sat[5]),]$Q2P_8 = as.character(dat[which(dat$Q2DP_8==sat[1]|dat$Q2DP_8==sat[2]|dat$Q2DP_8==sat[3]|dat$Q2DP_8==sat[4]|dat$Q2DP_8==sat[5]),]$Q2DP_8)
dat[which(dat$Q2EP_8==sat[1]|dat$Q2EP_8==sat[2]|dat$Q2EP_8==sat[3]|dat$Q2EP_8==sat[4]|dat$Q2EP_8==sat[5]),]$Q2P_8 = as.character(dat[which(dat$Q2EP_8==sat[1]|dat$Q2EP_8==sat[2]|dat$Q2EP_8==sat[3]|dat$Q2EP_8==sat[4]|dat$Q2EP_8==sat[5]),]$Q2EP_8)
dat[which(dat$Q2FP_8==sat[1]|dat$Q2FP_8==sat[2]|dat$Q2FP_8==sat[3]|dat$Q2FP_8==sat[4]|dat$Q2FP_8==sat[5]),]$Q2P_8 = as.character(dat[which(dat$Q2FP_8==sat[1]|dat$Q2FP_8==sat[2]|dat$Q2FP_8==sat[3]|dat$Q2FP_8==sat[4]|dat$Q2FP_8==sat[5]),]$Q2FP_8)
dat[which(dat$Q2GP_8==sat[1]|dat$Q2GP_8==sat[2]|dat$Q2GP_8==sat[3]|dat$Q2GP_8==sat[4]|dat$Q2GP_8==sat[5]),]$Q2P_8 = as.character(dat[which(dat$Q2GP_8==sat[1]|dat$Q2GP_8==sat[2]|dat$Q2GP_8==sat[3]|dat$Q2GP_8==sat[4]|dat$Q2GP_8==sat[5]),]$Q2GP_8)
dat[which(dat$Q2HP_8==sat[1]|dat$Q2HP_8==sat[2]|dat$Q2HP_8==sat[3]|dat$Q2HP_8==sat[4]|dat$Q2HP_8==sat[5]),]$Q2P_8 = as.character(dat[which(dat$Q2HP_8==sat[1]|dat$Q2HP_8==sat[2]|dat$Q2HP_8==sat[3]|dat$Q2HP_8==sat[4]|dat$Q2HP_8==sat[5]),]$Q2HP_8)
dat[which(dat$Q2IP_8==sat[1]|dat$Q2IP_8==sat[2]|dat$Q2IP_8==sat[3]|dat$Q2IP_8==sat[4]|dat$Q2IP_8==sat[5]),]$Q2P_8 = as.character(dat[which(dat$Q2IP_8==sat[1]|dat$Q2IP_8==sat[2]|dat$Q2IP_8==sat[3]|dat$Q2IP_8==sat[4]|dat$Q2IP_8==sat[5]),]$Q2IP_8)
dat$Q2P_8 = ordered(dat$Q2P_8, levels = sat)
dat$Q2P_8_na = rep(0, nrow(dat))
dat[is.na(dat$Q2P_8),]$Q2P_8_na = 1
wset = svydesign(ids=~1, data=dat, weights=dat$wt_parent)
svymean(~Q2P_8, subset(wset, School==1 & Q2P_8_na!=1))  ##charter
svymean(~Q2P_8, subset(wset, School==2 & Q2P_8_na!=1))  ##private
svymean(~Q2P_8, subset(wset, School==3 & Q2P_8_na!=1))  ##public
##Perception dummies
####################
make.dum = function(var){
##Convert factor into dummy variable
dat$var = dat[,var]
dat$var_new = NA
if (substr(var,2,2)==2){
dat[which(dat$var=="Very satisfied"),]$var_new = 1
dat[which(dat$var=="Satisfied" | dat$var=="Neither satisfied nor dissatisfied" |
dat$var=="Dissatisfied" | dat$var=="Very dissatisfied"),]$var_new = 0
} else if (substr(var,2,2)==3){
dat[which(dat$var=="Very serious"|dat$var=="Somewhat serious"),]$var_new = 1
dat[which(dat$var=="Not serious"),]$var_new = 0
} else if(substr(var,2,2)==4){
dat[which(dat$var=="One or two times" | dat$var=="Three or four times" |
dat$var=="Five or more times"),]$var_new = 1
dat[which(dat$var=="None"),]$var_new = 0
}
names(dat)[names(dat) == "var_new"] = paste(var, "dum", sep="_")
dat = dat[,!names(dat) %in% c("var")]
return(dat)
}
for(i in 1:8){
dat = make.dum(paste("Q2P",i,sep="_"))
}
for(i in 1:7){
dat = make.dum(paste("Q3P",i,sep="_"))
}
for(i in 1:6){
dat = make.dum(paste("Q4P",i,sep="_"))
}
##Total items for which very satisfied
dat$tot_vs = dat$Q2P_1_dum + dat$Q2P_2_dum + dat$Q2P_3_dum + dat$Q2P_4_dum +
dat$Q2P_5_dum + dat$Q2P_6_dum + dat$Q2P_7_dum + dat$Q2P_8_dum
##Total of five key items for which very satisfied
dat$tot_vs_5 = dat$Q2P_1_dum + dat$Q2P_2_dum + dat$Q2P_3_dum + dat$Q2P_4_dum +
dat$Q2P_5_dum
# barplot(table(dat$tot_vs[!is.na(dat$tot_vs)]))
# barplot(table(dat$tot_vs_5[!is.na(dat$tot_vs_5)]))
##Support for charter schools
#############################
dat[which(dat$Q19A=="Refused"),]$Q19A = NA
dat[which(dat$Q19B=="Refused"),]$Q19B = NA
sup.vals = c("Completely oppose", "Somewhat oppose", "Neither support nor oppose",
"Somewhat support", "Completely support")
dat$Q19A = factor(dat$Q19A, levels=sup.vals, ordered=TRUE)
dat$Q19B = factor(dat$Q19B, levels=sup.vals, ordered=TRUE)
dat$Q19 = NA
dat[which(dat$Q19_Assign=="Show Q19a"),]$Q19 = as.character(dat[which(dat$Q19_Assign=="Show Q19a"),]$Q19A)
dat[which(dat$Q19_Assign=="Show Q19b"),]$Q19 = as.character(dat[which(dat$Q19_Assign=="Show Q19b"),]$Q19B)
dat$Q19 = factor(dat$Q19, levels=levels(dat$Q19A), ordered=TRUE)
dat$Q19_Assign_Dum = NA
dat[which(dat$Q19_Assign=="Show Q19a"),]$Q19_Assign_Dum = 1
dat[which(dat$Q19_Assign=="Show Q19b"),]$Q19_Assign_Dum = 0
##Covariates
############
##Years of education
dat$Edyears = rep(NA, nrow(dat))
dat[which(as.numeric(dat$PPEDUC)==3 | as.numeric(dat$PPEDUC)==4 |
as.numeric(dat$PPEDUC)==5 | as.numeric(dat$PPEDUC)==6),]$Edyears = 8
dat[which(as.numeric(dat$PPEDUC)==7 | as.numeric(dat$PPEDUC)==8 |
as.numeric(dat$PPEDUC)==9 | as.numeric(dat$PPEDUC)==10),]$Edyears = 10
dat[which(as.numeric(dat$PPEDUC)==11),]$Edyears = 12
dat[which(as.numeric(dat$PPEDUC)==12),]$Edyears = 13
dat[which(as.numeric(dat$PPEDUC)==13),]$Edyears = 14
dat[which(as.numeric(dat$PPEDUC)==14),]$Edyears = 16
dat[which(as.numeric(dat$PPEDUC)==15),]$Edyears = 18
dat[which(as.numeric(dat$PPEDUC)==16),]$Edyears = 20
##Eddat = data.frame(Category=unique(dat$PPEDUC), Original=unique(as.numeric(dat$PPEDUC)), Samvalue = unique(dat$Edyears))
##Eddat[order(Eddat$Samvalue),]
##Income
dat$Income = rep(NA, nrow(dat))
dat[which(dat$PPINCIMP=="Less than $5,000"|
dat$PPINCIMP=="$5,000 to $7,499"|
dat$PPINCIMP=="$7,500 to $9,999"),]$Income = 5000
dat[which(dat$PPINCIMP=="$10,000 to $12,499"|
dat$PPINCIMP=="$12,500 to $14,999"|
dat$PPINCIMP=="$15,000 to $19,999"),]$Income = 15000
dat[which(dat$PPINCIMP=="$20,000 to $24,999"|
dat$PPINCIMP=="$25,000 to $29,999"),]$Income = 25000
dat[which(dat$PPINCIMP=="$30,000 to $34,999"|
dat$PPINCIMP=="$35,000 to $39,999"),]$Income = 35000
dat[which(dat$PPINCIMP=="$40,000 to $49,999"),]$Income = 45000
dat[which(dat$PPINCIMP=="$50,000 to $59,999"),]$Income = 55000
dat[which(dat$PPINCIMP=="$60,000 to $74,999"),]$Income = 67500
dat[which(dat$PPINCIMP=="$75,000 to $84,999"|
dat$PPINCIMP=="$85,000 to $99,999"),]$Income = 87500
dat[which(dat$PPINCIMP=="$100,000 to $124,999"|
dat$PPINCIMP=="$125,000 to $149,999"),]$Income = 125000
dat[which(dat$PPINCIMP=="$150,000 to $174,999"|
dat$PPINCIMP=="$175,000 or more"),]$Income = 150000
dat$Income = dat$Income/1000
##Homeowner
dat$Homeowner = rep(NA, nrow(dat))
dat[which(dat$PPRENT=="Owned or being bought by you or someone in your household"),]$Homeowner = 1
dat[which(dat$PPRENT=="Rented for cash"),]$Homeowner = 0
dat[which(dat$PPRENT=="Occupied without payment of cash rent"),]$Homeowner = 0
##Teacher
length(which(is.na(dat$XTEACH)))
dat$Teacher = rep(0, nrow(dat))
dat[which(dat$XTEACH=="Teacher"),]$Teacher = 1
##Metro
length(which(is.na(dat$PPMSACAT)))
dat$Metro = rep(0, nrow(dat))
dat[which(dat$PPMSACAT=="Metro"),]$Metro = 1
##Region
length(which(is.na(dat$PPREG4)))
dat$Northeast = rep(0, nrow(dat))
dat$West = rep(0, nrow(dat))
dat$Midwest = rep(0, nrow(dat))
dat$South = rep(0, nrow(dat))
dat[which(dat$PPREG4=="Northeast"),]$Northeast = 1
dat[which(dat$PPREG4=="West"),]$West = 1
dat[which(dat$PPREG4=="Midwest"),]$Midwest = 1
dat[which(dat$PPREG4=="South"),]$South = 1
##Race
length(which(is.na(dat$PPETHM)))
dat$Black = rep(0, nrow(dat))
dat$Hispanic = rep(0, nrow(dat))
dat[which(dat$PPETHM=="Black, Non-Hispanic"),]$Black = 1
dat[which(dat$PPETHM=="Hispanic"),]$Hispanic = 1
##PPS
dat$PPS= dat$PPS/1000
##Convert any Refused in outcome variables to NA
################################################
unique(dat$Q3P_2)
unique(dat$Q4P_1)
dat[which(dat$Q1=="Refused"),]$Q1 = NA
dat[which(dat$Q3=="Refused"),]$Q3 = NA
dat[which(dat$Q3P_1=="Refused"),]$Q3P_1 = NA
dat[which(dat$Q3P_2=="Refused"),]$Q3P_2 = NA
dat[which(dat$Q3P_3=="Refused"),]$Q3P_3 = NA
dat[which(dat$Q3P_4=="Refused"),]$Q3P_4 = NA
dat[which(dat$Q3P_5=="Refused"),]$Q3P_5 = NA
dat[which(dat$Q3P_6=="Refused"),]$Q3P_6 = NA
dat[which(dat$Q3P_7=="Refused"),]$Q3P_7 = NA
dat[which(dat$Q4P_1=="Refused"),]$Q4P_1 = NA
dat[which(dat$Q4P_2=="Refused"),]$Q4P_2 = NA
dat[which(dat$Q4P_3=="Refused"),]$Q4P_3 = NA
dat[which(dat$Q4P_4=="Refused"),]$Q4P_4 = NA
dat[which(dat$Q4P_5=="Refused"),]$Q4P_5 = NA
dat[which(dat$Q4P_6=="Refused"),]$Q4P_6 = NA
##Linking to Stanford district data
###################################
##Stanford (CEPA) geographic data found at: https://cepa.stanford.edu/seda/data-archive
stan = read.csv(paste(root.add, "/Stanford Data/CovB_V1_1.csv",sep=""))
stan13 = stan[which(stan$year==2013),]
nrow(stan)
head(stan)
length(unique(stan13$leaid))
nrow(stan13)
stan13 = stan13[,c("leaid","urban")]
# head(stan13[,c("leaid", "flunch_all","ncharters","perblk","perhsp")])
# naep = read.csv(paste(root.add, "/Stanford Data/MeanG_V1_1.csv",sep=""))
# naep13_g8 = naep[which(naep$year==2013 & naep$grade==8),]
# length(unique(naep13_g8$leaid))
# nrow(naep13_g8)
#
# standat = merge(stan13[,c("leaid", "flunch_all","ncharters","perblk","perhsp")],
#                 naep13_g8[,c("leaid", "mean_link_math")], by.x="leaid", by.y="leaid",
#                 all=TRUE)  ##won't let me also include all.y
# nrow(standat)
# length(unique(standat$leaid))
# nrow(stan13)
# nrow(naep13_g8)
dat$leaid_uni_num = as.numeric(as.character(dat$leaid_uni))
dat$leaid_elm_num = as.numeric(as.character(dat$leaid_elm))
dat$leaid_sec_num = as.numeric(as.character(dat$leaid_sec))
newdat1 = merge(dat, stan13, by.x="leaid_uni_num", by.y="leaid", all.x=TRUE)
length(which(is.na(stan13$urban)))
length(which(is.na(newdat1$urban)))
findat1 = newdat1[which(!is.na(newdat1$urban)),]
subdat1 = dat[is.element(dat$CaseID2015, newdat1[which(is.na(newdat1$urban)),]$CaseID2015),]
nrow(findat1) + nrow(subdat1)
newdat2 = merge(subdat1, stan13, by.x="leaid_elm_num", by.y="leaid", all.x=TRUE)
length(which(is.na(newdat2$urban)))
findat2 = newdat2[which(!is.na(newdat2$urban)),]
subdat2 = dat[is.element(dat$CaseID2015, newdat2[which(is.na(newdat2$urban)),]$CaseID2015),]
nrow(findat1) + nrow(findat2) + nrow(subdat2)
findat3 = merge(subdat2, stan13, by.x="leaid_sec_num", by.y="leaid", all.x=TRUE)
length(which(is.na(findat3$urban)))
newdat = rbind(findat1, findat2)
newdat = rbind(newdat, findat3)
nrow(newdat)
length(which(is.na(newdat$urban)))
length(unique(newdat$CaseID2015))
newdat$urban.na = rep(0,nrow(newdat))
newdat[is.na(newdat$urban),]$urban.na = 1
newdat[is.na(newdat$urban),]$urban = 0
length(which(is.na(newdat$urban)))
dat = newdat
rm(stan, stan13, newdat)
##Consolidate Q2 outcomes, for Stata only
#########################################
unique(dat$Q2P_1)
unique(dat$Q3P_1)
unique(dat$Q3P_1)
unique(dat$Q3P_2)
unique(dat$Q3P_1)
unique(dat$Q3P_3)
unique(dat$Q3P_4)
unique(dat$Q3P_5)
unique(dat$Q3P_6)
unique(dat$Q3P_7)
unique(dat$Q3P_8)
dat = read.table('ccd_sch_029_1516_txt_prel.tab', sep="\t", header=TRUE)
setwd('/Users/sambarrows/Dropbox/Marketing_schools')
dat = read.table('ccd_sch_029_1516_txt_prel.tab', sep="\t", header=TRUE)
head(dat)
da$website
dat$website
dat$WEBSITE
head(dat)
unique(dat$LSTATE)
datp[which(dat$LSTATE=='CA'),]
dat[which(dat$LSTATE=='CA'),]
dat[which(dat$LSTATE=='CA'),]$WEBSITE[1:10]
head(dat)
dat.ca = dat[which(dat$LSTATE=='CA'),]$WEBSITE[1:10]
dat.ca$SCH_NAME[1:20]
dat.ca = dat[which(dat$LSTATE=='CA'),]
dat.ca$SCH_NAME[1:20]
ca.names  = dat.ca$SCH_NAME
write.csv(ca.names, "ca_names.csv")
write.csv(ca.names, "ca_names.csv", rownames=F)
write.csv(ca.names, "ca_names.csv", row.names=F)
write.csv(ca.names, "ca_names.csv", col.names=F, row.names=F)
write.csv(ca.names, "ca_names.csv", row.names=F)
dat.oh = dat[which(dat$LSTATE=='OH'),]
oh.names  = dat.oh$SCH_NAME
oh.names
oh.names[1:10]
